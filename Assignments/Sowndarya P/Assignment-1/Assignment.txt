
Basic Python
1. Split this string
s = "Hi there Sam!"
s = s.split()
print(s)
['Hi', 'there', 'Sam!']

---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
 in 
----> 1 s = s.split()
      2 print(s)

NameError: name 's' is not defined
2. Use .format() to print the following string.
Output should be: The diameter of Earth is 12742 kilometers.
planet = "Earth"
diameter = 12742
print(f"The diameter of Earth is {diameter} kilometers")
The diameter of Earth is 12742 kilometers

---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
 in 
----> 1 print(f"The diameter of Earth is {diameter} kilometers")

NameError: name 'diameter' is not defined
3. In this nest dictionary grab the word "hello"
d = {'k1':[1,2,3,{'tricky':['oh','man','inception',{'target':[1,2,3,'hello']}]}]}
d['k1'][3]['tricky'][3]['target'][3]
'hello'

Numpy
import numpy as np
4.1 Create an array of 10 zeros?
4.2 Create an array of 10 fives?
import numpy as np
array=np.zeros(10)
print(array)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
import numpy as np
array=np.ones(10)*5
print(array)
[5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]
5. Create an array of all the even integers from 20 to 35
print(np.arange(20,35,2))
[20 22 24 26 28 30 32 34]
6. Create a 3x3 matrix with values ranging from 0 to 8
np.arange(0,9).reshape((3,3))
array([[0, 1, 2],
       [3, 4, 5],
       [6, 7, 8]])
7. Concatenate a and b
a = np.array([1, 2, 3]), b = np.array([4, 5, 6])
a=np.array([1,2,3])
b=np.array([4,5,6])
np.concatenate((a,b))
array([1, 2, 3, 4, 5, 6])
Pandas
8. Create a dataframe with 3 rows and 2 columns
import pandas as pd
import pandas as pd
a=pd.DataFrame({"row1":[1,2],'row2':[3,4],"row3":[5,6]})
a
row1	row2	row3
0	1	3	5
1	2	4	6
9. Generate the series of dates from 1st Jan, 2023 to 10th Feb, 2023
import datetime
test_date = datetime.datetime.strptime('01-1-2023',"%d-%m-%Y")
x=41
date = pd.date_range(test_date,periods = x)
print(date.strftime("%d-%m-%Y"))
Index(['01-01-2023', '02-01-2023', '03-01-2023', '04-01-2023', '05-01-2023',
       '06-01-2023', '07-01-2023', '08-01-2023', '09-01-2023', '10-01-2023',
       '11-01-2023', '12-01-2023', '13-01-2023', '14-01-2023', '15-01-2023',
       '16-01-2023', '17-01-2023', '18-01-2023', '19-01-2023', '20-01-2023',
       '21-01-2023', '22-01-2023', '23-01-2023', '24-01-2023', '25-01-2023',
       '26-01-2023', '27-01-2023', '28-01-2023', '29-01-2023', '30-01-2023',
       '31-01-2023', '01-02-2023', '02-02-2023', '03-02-2023', '04-02-2023',
       '05-02-2023', '06-02-2023', '07-02-2023', '08-02-2023', '09-02-2023',
       '10-02-2023'],
      dtype='object')
10. Create 2D list to DataFrame
lists = [[1, 'aaa', 22], [2, 'bbb', 25], [3, 'ccc', 24]]

lists = [[1, 'aaa', 22], [2, 'bbb', 25], [3, 'ccc', 24]]
lists = [[1, 'aaa', 22], [2, 'bbb', 25], [3, 'ccc', 24]]
df=pd.DataFrame(lists)
df
0	1	2
0	1	aaa	22
1	2	bbb	25
2	3	ccc	24